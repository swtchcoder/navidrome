// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package subsonic

import (
	"github.com/google/wire"
)

// Injectors from wire_injectors.go:

func initSystemController(router *Router) *SystemController {
	systemController := NewSystemController()
	return systemController
}

func initBrowsingController(router *Router) *BrowsingController {
	dataStore := router.DataStore
	browsingController := NewBrowsingController(dataStore)
	return browsingController
}

func initAlbumListController(router *Router) *AlbumListController {
	listGenerator := router.ListGenerator
	albumListController := NewAlbumListController(listGenerator)
	return albumListController
}

func initMediaAnnotationController(router *Router) *MediaAnnotationController {
	scrobbler := router.Scrobbler
	dataStore := router.DataStore
	mediaAnnotationController := NewMediaAnnotationController(scrobbler, dataStore)
	return mediaAnnotationController
}

func initPlaylistsController(router *Router) *PlaylistsController {
	playlists := router.Playlists
	playlistsController := NewPlaylistsController(playlists)
	return playlistsController
}

func initSearchingController(router *Router) *SearchingController {
	dataStore := router.DataStore
	searchingController := NewSearchingController(dataStore)
	return searchingController
}

func initUsersController(router *Router) *UsersController {
	usersController := NewUsersController()
	return usersController
}

func initMediaRetrievalController(router *Router) *MediaRetrievalController {
	artwork := router.Artwork
	mediaRetrievalController := NewMediaRetrievalController(artwork)
	return mediaRetrievalController
}

func initStreamController(router *Router) *StreamController {
	mediaStreamer := router.Streamer
	archiver := router.Archiver
	dataStore := router.DataStore
	streamController := NewStreamController(mediaStreamer, archiver, dataStore)
	return streamController
}

func initBookmarksController(router *Router) *BookmarksController {
	dataStore := router.DataStore
	bookmarksController := NewBookmarksController(dataStore)
	return bookmarksController
}

// wire_injectors.go:

var allProviders = wire.NewSet(
	NewSystemController,
	NewBrowsingController,
	NewAlbumListController,
	NewMediaAnnotationController,
	NewPlaylistsController,
	NewSearchingController,
	NewUsersController,
	NewMediaRetrievalController,
	NewStreamController,
	NewBookmarksController, wire.FieldsOf(new(*Router), "Artwork", "ListGenerator", "Playlists", "Scrobbler", "Streamer", "Archiver", "DataStore"),
)
