name: Build
on:
  push:
  pull_request:
    types: [closed]
    branches:
      - master
jobs:
  go:
    name: Test Server on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # TODO Fix tests in Windows
        #        os: [macOS-latest, ubuntu-latest, windows-latest]
        os: [macOS-latest, ubuntu-latest]

    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - uses: actions/cache@v1
        id: cache-go
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        if: steps.cache-go.outputs.cache-hit != 'true'
        run: go mod download

      - name: Test
        run: go test -cover ./... -v

  js:
    name: Test UI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 13

      - uses: actions/cache@v1
        id: cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('ui/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install dependencies
        run: |
          cd ui
          npm ci

      # TODO: Enable when there are tests to run
      #      - name: npm test
      #        run: |
      #          cd ui
      #          CI=test npm test

      - name: npm build
        run: |
          cd ui
          npm run build

      - uses: actions/upload-artifact@v1
        with:
          name: js-bundle
          path: ui/build

  build:
    name: Build snapshot binaries
    if: github.event.pull_request.merged || github.event_name == 'push'
    needs: [js]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Unshallow
        run: git fetch --prune --unshallow

      - uses: actions/download-artifact@v1
        with:
          name: js-bundle
          path: ui/build

      - name: Run GoReleaser
        uses: docker://deluan/ci-goreleaser:1.14.1-1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: goreleaser release --rm-dist --skip-publish --snapshot

      - uses: actions/upload-artifact@v1
        with:
          name: binaries
          path: dist
